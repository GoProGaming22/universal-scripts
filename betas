--[[

        Universal Scripts - Wersja z GUI ZAŁOŻONĄ W STUDIO,
        z dodanym ODDZIELNYM ScreenGui dla przycisku "X",
        który zawsze podąża za główną ramką, nawet gdy jest ukryta,
        i nigdy nie znika.
        Version 25.0 (Naprawiona po pomyłce)

]]

local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local MarketplaceService = game:GetService("MarketplaceService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local GAMEPASS_ID = 1296972626 -- JEDYNE ID Game Passa dla całego skryptu
local MM2_EXPERIENCE_ID = 142823291 -- Poprawne ID dla Murder Mystery 2

print("--- SKRYPT UNIVERSAL SCRIPTS START ---") -- DEBUG
print("Skrypt załadowany. ID Game Passa:", GAMEPASS_ID)
print("Twoje UserID:", player.UserId)
print("Aktualne Experience ID:", game.PlaceId)
print("Oczekiwane MM2 Experience ID:", MM2_EXPERIENCE_ID)
print("---")

-- Zmienna globalna do przechowywania statusu Game Passa
local hasGamePass = false
local initialGamePassCheckDone = false -- Nowa zmienna do kontrolowania początkowych powiadomień

local function sendNotification(title, text)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Icon = "rbxassetid://6022295536", -- Upewnij się, że to ID obrazu jest poprawne lub zmień na własne
        Duration = 5
    })
end

-- *** ODWOŁUJEMY SIĘ DO ISTNIEJĄCEGO GUI W PLAYERGUI ***
-- Zakładamy, że masz ScreenGui o nazwie "UniversalScriptsGui" w PlayerGui
local MainScreenGui = player:WaitForChild("PlayerGui"):WaitForChild("UniversalScriptsGui")
local Frame = MainScreenGui:WaitForChild("MainFrame")
local TabsFrame = Frame:WaitForChild("TabsFrame")
local HomeButton = TabsFrame:WaitForChild("HomeTabButton")
local PremiumButton = TabsFrame:WaitForChild("PremiumTabButton")
local ScrollingFramePremium = Frame:WaitForChild("ScrollingFramePremium")
local ScrollingFrameHome = Frame:WaitForChild("ScrollingFrameHome")

-- Odwołania do przycisków wewnątrz ScrollingFramePremium
local SpectateButton = ScrollingFramePremium:WaitForChild("Spectate Button Premium")
local MM2Button = ScrollingFramePremium:WaitForChild("MM2 Button Premium")
local FlyButton = ScrollingFramePremium:WaitForChild("Console Button Premium") -- Poprawiona nazwa
local Invisibiltybutton = ScrollingFramePremium:WaitForChild("Invisibilty Button Premium")

-- Odwołania do przycisków wewnątrz ScrollingFrameHome
local SpeedToolbutton = ScrollingFrameHome:WaitForChild("Speed Tool button Home")
local ClicktptoolButton = ScrollingFrameHome:WaitForChild("Click tp tool Button Home")
local SpectateButton_2 = ScrollingFrameHome:WaitForChild("Spectate Button Home")
local NoclipButton = ScrollingFrameHome:WaitForChild("Noclip Button Home")
local FlingButton = ScrollingFrameHome:WaitForChild("Fling Button Home")

-- *** TWORZYMY NOWY SCREENGUI I PRZYCISK "X" W KODZIE ***
local XButtonGui = Instance.new("ScreenGui")
XButtonGui.Name = "XButtonGui"
XButtonGui.Parent = player:WaitForChild("PlayerGui")
XButtonGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
XButtonGui.ResetOnSpawn = false

local HideButton = Instance.new("TextButton")
HideButton.Name = "HideButton"
HideButton.Parent = XButtonGui
HideButton.BackgroundColor3 = Color3.new(1, 0, 0)
HideButton.BorderColor3 = Color3.new(0, 0, 0)
HideButton.BorderSizePixel = 3
HideButton.Position = UDim2.new(0.5, 0, 0.5, 0) -- Pozycja tymczasowa, będzie dynamicznie aktualizowana
HideButton.Size = UDim2.new(0.0482946634, 0, 0.0802469105, 0)
HideButton.ZIndex = 5 -- Najwyższy ZIndex, aby był zawsze na wierzchu
HideButton.Font = Enum.Font.Unknown
HideButton.Text = "X"
HideButton.TextColor3 = Color3.new(0, 0, 0)
HideButton.TextScaled = true
HideButton.TextSize = 14
HideButton.TextWrapped = true
HideButton.Draggable = true

local UITextSizeConstraint_HideButton = Instance.new("UITextSizeConstraint") -- Musi być osobny dla HideButton
UITextSizeConstraint_HideButton.Parent = HideButton
UITextSizeConstraint_HideButton.MaxTextSize = 28

-- Logika Skryptu
-- Funkcja do przełączania zakładek
local function showTab(tabName)
    print("DEBUG: Próbuję przełączyć na zakładkę:", tabName)
    ScrollingFrameHome.Visible = false
    ScrollingFramePremium.Visible = false

    if tabName == "Home" then
        ScrollingFrameHome.Visible = true
        print("DEBUG: Zakładka Home ustawiona na Visible = true")
    elseif tabName == "Premium" then
        if hasGamePass then
            ScrollingFramePremium.Visible = true
            print("DEBUG: Zakładka Premium ustawiona na Visible = true")
        else
            sendNotification("Universal Scripts", "Musisz posiadać Game Pass, aby uzyskać dostęp do tej zakładki! Otwieram okno zakupu.")
            print("DEBUG: Próba dostępu do zakładki Premium bez Game Passa. Wywołuję PromptGamePassPurchase.")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    end
end

-- Funkcja do sprawdzania statusu Game Passa
local function checkGamePassStatus()
    print("DEBUG: Sprawdzam status Game Passa (ID:", GAMEPASS_ID, ")...")
    local success, result = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        hasGamePass = result
        print("DEBUG: Status Game Passa:", hasGamePass)
        if not initialGamePassCheckDone then
            if hasGamePass then
                sendNotification("Universal Scripts", "Posiadasz Game Pass! Funkcje Premium odblokowane.")
            else
                sendNotification("Universal Scripts", "Nie posiadasz Game Passa. Odwiedź zakładkę Premium, aby go kupić.")
            end
            initialGamePassCheckDone = true
        end
    else
        warn("DEBUG: Błąd podczas sprawdzania Game Passa:", result)
        sendNotification("Universal Scripts", "Nie można sprawdzić statusu Game Passa. Spróbuj ponownie.")
    end
end

-- Funkcja do aktualizacji widoczności przycisku MM2 Premium
local function updateMM2ButtonVisibility()
    if game.PlaceId == MM2_EXPERIENCE_ID then
        MM2Button.Visible = true
        print("DEBUG: Jesteś w MM2 Experience, przycisk MM2 (Premium) jest WIDOCZNY.")
    else
        MM2Button.Visible = false
        print("DEBUG: Nie jesteś w MM2 Experience, przycisk MM2 (Premium) jest UKRYTY.")
    end
end

-- Funkcja do dynamicznego pozycjonowania przycisku "X"
local function updateHideButtonPosition()
    local xButtonSize = HideButton.AbsoluteSize
    local xOffset = xButtonSize.X * 0.5 -- Odsunięcie od krawędzi
    local yOffset = xButtonSize.Y * 0.5 -- Odsunięcie od krawędzi

    local targetX, targetY

    -- Używamy AbsolutePosition i AbsoluteSize głównej ramki
    local mainFrameAbsolutePosition = Frame.AbsolutePosition
    local mainFrameAbsoluteSize = Frame.AbsoluteSize

    if Frame.Visible then
        -- Jeśli ramka jest widoczna, podążaj za jej prawym górnym rogiem
        targetX = mainFrameAbsolutePosition.X + mainFrameAbsoluteSize.X - xOffset
        targetY = mainFrameAbsolutePosition.Y - yOffset
    else
        -- Jeśli ramka jest ukryta, przycisk "X" powinien pojawić się w stałym, przewidywalnym miejscu.
        -- Używamy pozycji skalowanej (Scale) głównej ramki, aby zawsze był w tym samym miejscu na ekranie
        -- względem jej DOMYŚLNEJ pozycji, gdy jest ukryta.
        local screenWidth = MainScreenGui.AbsoluteSize.X -- Ważne, by używać rozmiaru całego ekranu
        local screenHeight = MainScreenGui.AbsoluteSize.Y

        -- Pobieramy domyślną skalowaną pozycję i rozmiar MainFrame Z WŁAŚCIWOŚCI
        -- To jest kluczowe, bo nie kopiujemy już wartości z kodu, ale odczytujemy z obiektu
        local initialFramePosition = Frame.Position
        local initialFrameSize = Frame.Size

        local initialFrameAbsoluteX = screenWidth * initialFramePosition.X.Scale + initialFramePosition.X.Offset
        local initialFrameAbsoluteY = screenHeight * initialFramePosition.Y.Scale + initialFramePosition.Y.Offset
        local initialFrameAbsoluteWidth = screenWidth * initialFrameSize.X.Scale + initialFrameSize.X.Offset
        -- local initialFrameAbsoluteHeight = screenHeight * initialFrameSize.Y.Scale + initialFrameSize.Y.Offset -- Niepotrzebne

        targetX = initialFrameAbsoluteX + initialFrameAbsoluteWidth - xOffset
        targetY = initialFrameAbsoluteY - yOffset
    end

    HideButton.Position = UDim2.fromOffset(targetX, targetY)
end


-- Sprawdzenie statusu Game Passa przy starcie skryptu
checkGamePassStatus()
updateMM2ButtonVisibility()
-- Domyślnie pokaż zakładkę Home
showTab("Home")
updateHideButtonPosition() -- Ustaw początkową pozycję przycisku "X"

-- Połączenie do zdarzenia RenderStepped, aby aktualizować pozycję przycisku "X"
RunService.RenderStepped:Connect(function()
    updateHideButtonPosition() -- Zawsze aktualizuj pozycję "X", niezależnie od widoczności MainFrame
end)


-- Pomocnicza funkcja do uruchamiania skryptów i wysyłania powiadomień
local function runScriptAndNotify(url, buttonName)
    local success, err = pcall(function()
        loadstring(game:HttpGet(url))()
    end)
    if success then
        sendNotification("Universal Scripts", "Skrypt '" .. buttonName .. "' załadowany!")
    else
        sendNotification("Universal Scripts", "Błąd ładowania skryptu '" .. buttonName .. "': " .. tostring(err))
        warn("Błąd ładowania skryptu '" .. buttonName .. "':", err)
    end
end

-- Połączenia przycisków Home
SpeedToolbutton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Speed Tool (Home)")
    runScriptAndNotify("https://pastebin.com/raw/X7B0HPc2", SpeedToolbutton.Text)
end)

ClicktptoolButton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Click tp tool (Home)")
    runScriptAndNotify("https://pastebin.com/raw/4KF2WJ9u", ClicktptoolButton.Text)
end)

SpectateButton_2.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Spectate (Home)")
    runScriptAndNotify("https://pastebin.com/raw/UFVLWQRw", SpectateButton_2.Text)
end)

NoclipButton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Noclip (Home)")
    runScriptAndNotify("https://pastebin.com/raw/CnbYfaj1", NoclipButton.Text)
end)

FlingButton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Fling (Home)")
    runScriptAndNotify('https://raw.githubusercontent.com/0Ben1/fe/main/obf_rf6iQURzu1fqrytcnLBAvW34C9N55kS9g9G3CKz086rC47M6632sEd4ZZYB0AYgV.lua.txt', FlingButton.Text)
end)

-- Połączenia przycisków Premium
SpectateButton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Spectate (Premium). Sprawdzam Game Passa...")
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        print("DEBUG: Wynik sprawdzenia Game Passa (Spectate):", currentHasGamePass)
        if currentHasGamePass then
            runScriptAndNotify("https://pastebin.com/raw/UFVLWQRw", SpectateButton.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać Game Pass, aby użyć tej funkcji!")
            print("DEBUG: Wywołuję PromptGamePassPurchase dla Spectate.")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("DEBUG: Błąd podczas sprawdzania Game Passa (Spectate):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania Game Passa.")
    end
end)

MM2Button.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk MM2 (Premium). Sprawdzam Game Passa...")
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        print("DEBUG: Wynik sprawdzenia Game Passa (MM2):", currentHasGamePass)
        if currentHasGamePass then
            runScriptAndNotify("https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/loadstring", MM2Button.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać Game Pass, aby użyć tej funkcji!")
            print("DEBUG: Wywołuję PromptGamePassPurchase dla MM2.")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("DEBUG: Błąd podczas sprawdzania Game Passa (MM2):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania Game Passa.")
    end
end)

FlyButton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Console (Premium). Sprawdzam Game Passa...")
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        print("DEBUG: Wynik sprawdzenia Game Passa (Console):", currentHasGamePass)
        if currentHasGamePass then
            runScriptAndNotify("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source", FlyButton.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać Game Pass, aby użyć tej funkcji!")
            print("DEBUG: Wywołuję PromptGamePassPurchase dla Console.")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("DEBUG: Błąd podczas sprawdzania Game Passa (Console):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania Game Passa.")
    end
end)

Invisibiltybutton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Invisibilty (Premium). Sprawdzam Game Passa...")
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        print("DEBUG: Wynik sprawdzenia Game Passa (Invisibilty):", currentHasGamePass)
        if currentHasGamePass then
            runScriptAndNotify('https://pastebin.com/raw/3Rnd9rHf', Invisibiltybutton.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać Game Pass, aby użyć tej funkcji!")
            print("DEBUG: Wywołuję PromptGamePassPurchase dla Invisibilty.")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("DEBUG: Błąd podczas sprawdzania Game Passa (Invisibilty):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania Game Passa.")
    end
end)


-- Logika przycisków przełączających zakładki
HomeButton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Home. Przełączam na Home.")
    showTab("Home")
end)

PremiumButton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Premium. Przełączam na Premium lub otwieram okno zakupu.")
    showTab("Premium")
end)

HideButton.MouseButton1Click:Connect(function()
    print("DEBUG: Kliknięto przycisk Hide. Zmieniam widoczność MainFrame.")
    Frame.Visible = not Frame.Visible -- Ukrywa/pokazuje główną ramkę GUI
    -- HideButton jest w osobnym ScreenGui, więc zawsze pozostaje widoczny
end)

-- Obsługa zdarzenia po zakończeniu próby zakupu Game Passa
MarketplaceService.PromptGamePassPurchaseFinished:Connect(function(userId, gamePassId, wasPurchased)
    print("DEBUG: Zdarzenie PromptGamePassPurchaseFinished: userId=", userId, " gamePassId=", gamePassId, " wasPurchased=", wasPurchased)
    if userId == player.UserId and gamePassId == GAMEPASS_ID then
        if wasPurchased then
            sendNotification("Universal Scripts", "Game Pass kupiony pomyślnie! Dziękujemy za zakup.")
            hasGamePass = true
            showTab("Premium")
        else
            sendNotification("Universal Scripts", "Anulowano zakup Game Passa.")
        end
    end
end)

-- Początkowe powiadomienie
spawn(function()
    task.wait(1)
    sendNotification("Universal Scripts", "Witaj w Universal Scripts! Skrypt załadowany.")
    print("--- SKRYPT UNIVERSAL SCRIPTS ZAKOŃCZONO INICJALIZACJĘ ---") -- DEBUG
end)

task.wait(0.5)
