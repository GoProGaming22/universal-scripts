-- Początkowa konfiguracja gracza i jego humanoidu
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local UserInputService = game:GetService("UserInputService") -- Usługa do obsługi wejścia użytkownika (mysz, dotyk)

---
## Nowe GUI (z obsługą przeciągania myszą i dotykiem)
---

-- Tworzenie instancji wszystkich elementów GUI
local MainScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")
local SpeedInput = Instance.new("TextBox") -- Zmienna dla pola wpisywania prędkości
local UICorner_2 = Instance.new("UICorner")
local SetSpeedButton = Instance.new("TextButton") -- Zmienna dla przycisku "Set Speed"
local UICorner_3 = Instance.new("UICorner")
local SaveSpeedButton = Instance.new("TextButton") -- Zmienna dla przycisku "Save Speed"
local UICorner_4 = Instance.new("UICorner")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")

-- Ustawianie właściwości i hierarchii elementów GUI
MainScreenGui.Parent = player:WaitForChild("PlayerGui") -- Przypisanie ScreenGui do PlayerGui gracza
MainScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = MainScreenGui
Frame.BackgroundColor3 = Color3.new(0.356863, 0.356863, 0.356863)
Frame.BackgroundTransparency = 0.30000001192092896
Frame.BorderColor3 = Color3.new(0, 0, 0)
Frame.BorderSizePixel = 5
Frame.Position = UDim2.new(0.784961402, 0, 0.430471897, 0)
Frame.Size = UDim2.new(0, 293, 0, 343)
Frame.Active = true -- Kluczowe: Włącza reakcję ramki na zdarzenia wejścia (np. kliknięcia, dotyk), umożliwiając przeciąganie

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.BorderColor3 = Color3.new(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.156996593, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 35)
TextLabel.Font = Enum.Font.SourceSansBold
TextLabel.Text = "Speed Tool" -- Tekst etykiety
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextWrapped = true

UICorner.Parent = Frame

SpeedInput.Name = "SpeedInput" -- Nazwa obiektu w hierarchii, zgodna z oryginalną logiką dla innych części skryptu
SpeedInput.Parent = Frame
SpeedInput.BackgroundColor3 = Color3.new(1, 1, 1)
SpeedInput.BorderColor3 = Color3.new(0, 0, 0)
SpeedInput.BorderSizePixel = 0
SpeedInput.Position = UDim2.new(0.105802044, 0, 0.134110793, 0)
SpeedInput.Size = UDim2.new(0, 235, 0, 42)
SpeedInput.Font = Enum.Font.SourceSansBold
SpeedInput.Text = "Enter Speed..." -- Domyślny tekst w polu wprowadzania
SpeedInput.TextColor3 = Color3.new(0, 0, 0)
SpeedInput.TextScaled = true
SpeedInput.TextSize = 14
SpeedInput.TextWrapped = true
SpeedInput.ClearTextOnFocus = false -- Zachowuje oryginalne zachowanie: tekst nie znika po kliknięciu

UICorner_2.Parent = SpeedInput

SetSpeedButton.Name = "Button" -- Nazwa obiektu w hierarchii, zgodna z oryginalną logiką dla innych części skryptu
SetSpeedButton.Parent = Frame
SetSpeedButton.BackgroundColor3 = Color3.new(1, 1, 1)
SetSpeedButton.BorderColor3 = Color3.new(0, 0, 0)
SetSpeedButton.BorderSizePixel = 0
SetSpeedButton.Position = UDim2.new(0.0682593882, 0, 0.527696788, 0)
SetSpeedButton.Size = UDim2.new(0, 253, 0, 50)
SetSpeedButton.Font = Enum.Font.Unknown
SetSpeedButton.Text = "Set Speed" -- Tekst przycisku
SetSpeedButton.TextColor3 = Color3.new(0, 0, 0)
SetSpeedButton.TextScaled = true
SetSpeedButton.TextSize = 14
SetSpeedButton.TextWrapped = true

UICorner_3.Parent = SetSpeedButton

SaveSpeedButton.Name = "SaveSpeedButton" -- Nazwa obiektu w hierarchii, zgodna z oryginalną logiką dla innych części skryptu
SaveSpeedButton.Parent = Frame
SaveSpeedButton.BackgroundColor3 = Color3.new(1, 1, 1)
SaveSpeedButton.BorderColor3 = Color3.new(0, 0, 0)
SaveSpeedButton.BorderSizePixel = 0
SaveSpeedButton.Position = UDim2.new(0.075085327, 0, 0.725947499, 0)
SaveSpeedButton.Size = UDim2.new(0, 253, 0, 50)
SaveSpeedButton.Font = Enum.Font.Unknown
SaveSpeedButton.Text = "Save Speed" -- Tekst przycisku
SaveSpeedButton.TextColor3 = Color3.new(0, 0, 0)
SaveSpeedButton.TextScaled = true
SaveSpeedButton.TextSize = 14
SaveSpeedButton.TextWrapped = true

UICorner_4.Parent = SaveSpeedButton

UIAspectRatioConstraint.Parent = MainScreenGui
UIAspectRatioConstraint.AspectRatio = 1.9240963459014893

---
## Logika funkcjonalna (z pierwszego skryptu)
---

-- Zmienna do przechowywania zapisanej prędkości gracza
local savedSpeed = nil

-- Obsługa kliknięć przycisku "Set Speed"
SetSpeedButton.MouseButton1Click:Connect(function()
    local newSpeed = tonumber(SpeedInput.Text) -- Próba konwersji tekstu na liczbę
    if newSpeed then
        humanoid.WalkSpeed = newSpeed -- Ustawienie nowej prędkości chodzenia humanoidowi
        print("Speed set to: " .. newSpeed) -- Komunikat w konsoli
    else
        SpeedInput.Text = "Invalid value" -- Komunikat o błędnej wartości
    end
end)

-- Obsługa kliknięć przycisku "Save Speed"
SaveSpeedButton.MouseButton1Click:Connect(function()
    local newSpeed = tonumber(SpeedInput.Text) -- Próba konwersji tekstu na liczbę
    if newSpeed then
        savedSpeed = newSpeed -- Zapisanie prędkości
        SpeedInput.Text = "Saved: " .. savedSpeed -- Wyświetlenie zapisanej prędkości w polu tekstowym
        print("Speed saved: " .. savedSpeed) -- Komunikat w konsoli
    else
        SpeedInput.Text = "Invalid value" -- Komunikat o błędnej wartości
    end
end)

---
## Funkcja do przeciągania GUI (obsługa myszy i dotyku)
---

-- Funkcja, która sprawia, że dowolna ramka GUI jest przeciągalna
local function makeDraggable(frame)
    local dragging = false -- Flaga informująca, czy ramka jest aktualnie przeciągana
    local dragStart = Vector2.new(0,0) -- Pozycja kursora/dotyku w momencie rozpoczęcia przeciągania
    local startPosition = UDim2.new(0,0,0,0) -- Początkowa pozycja ramki w momencie rozpoczęcia przeciągania

    -- Reakcja na rozpoczęcie wejścia (kliknięcie myszy lub dotyk) na ramce
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true -- Ustawienie flagi przeciągania na true
            dragStart = input.Position -- Zapisanie pozycji startowej wejścia
            startPosition = frame.Position -- Zapisanie pozycji ramki
        end
    end)

    -- Nasłuchujemy na zmiany wejścia globalnie (na UserInputService),
    -- aby ramka mogła być przeciągana nawet wtedy, gdy kursor/palec wyjdzie poza jej granice
    UserInputService.InputChanged:Connect(function(input, gameProcessedEvent)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragging and not gameProcessedEvent then -- Jeśli przeciągamy i zdarzenie nie zostało już przetworzone przez grę (np. przez inny element GUI)
                local delta = input.Position - dragStart -- Obliczenie przesunięcia
                -- Ustawienie nowej pozycji ramki, uwzględniając jej skalę i offsety
                frame.Position = UDim2.new(startPosition.X.Scale, startPosition.X.Offset + delta.X, startPosition.Y.Scale, startPosition.Y.Offset + delta.Y)
            end
        end
    end)

    -- Nasłuchujemy na zakończenie wejścia globalnie, aby przestać przeciągać ramkę
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false -- Ustawienie flagi przeciągania na false
        end
    end)
end

-- Wywołanie funkcji, aby nasza główna ramka GUI (Frame) była przeciągalna
makeDraggable(Frame)

---
## Logika Narzędzia (Toola)
---

-- Zmienna do przechowywania poprzedniej prędkości gracza przed wyposażeniem narzędzia
local previousSpeed = humanoid.WalkSpeed

-- Tworzenie instancji narzędzia (Toola)
local tool = Instance.new("Tool")
tool.Name = "SpeedTool" -- Nazwa narzędzia, widoczna w ekwipunku
tool.RequiresHandle = false -- Narzędzie nie wymaga uchwytu (modelu w ręce gracza)
tool.Parent = player.Backpack -- Dodanie narzędzia do plecaka gracza

-- Reakcja na aktywację narzędzia (np. kliknięcie lewym przyciskiem myszy)
tool.Activated:Connect(function()
    -- Zmiana prędkości po aktywacji narzędzia
    if savedSpeed then
        humanoid.WalkSpeed = savedSpeed  -- Ustawiamy zapisaną prędkość
        SpeedInput.Text = tostring(savedSpeed)  -- Wyświetlamy zapisaną prędkość w polu tekstowym
        print("Tool activated. Speed set to saved: " .. savedSpeed) -- Komunikat w konsoli
    else
        humanoid.WalkSpeed = 16 -- Domyślna prędkość, jeśli nic nie zostało wcześniej zapisane
        SpeedInput.Text = "16" -- Ustawienie domyślnego tekstu w polu
        print("Tool activated. No saved speed, set to 16.") -- Komunikat w konsoli
    end
    Frame.Visible = true  -- Wyświetlenie GUI po aktywacji narzędzia
end)

-- Reakcja na wyposażenie narzędzia (wzięcie go do ręki)
tool.Equipped:Connect(function()
    -- Gdy narzędzie jest wyposażone, GUI staje się widoczne
    Frame.Visible = true
    SpeedInput.Text = tostring(savedSpeed or humanoid.WalkSpeed)  -- Pokazujemy zapisaną prędkość lub aktualną prędkość gracza
    previousSpeed = humanoid.WalkSpeed -- Zapisujemy obecną prędkość gracza, aby móc ją przywrócić
    print("Tool equipped. GUI visible.") -- Komunikat w konsoli
end)

-- Reakcja na odłożenie narzędzia (schowanie go z ręki)
tool.Unequipped:Connect(function()
    -- Gdy narzędzie jest odłożone, GUI znika i prędkość gracza wraca do poprzedniej
    Frame.Visible = false
    humanoid.WalkSpeed = previousSpeed  -- Przywracamy poprzednią prędkość gracza
    SpeedInput.Text = tostring(previousSpeed)  -- Ustawiamy tekst w polu na poprzednią wartość prędkości
    print("Tool unequipped. GUI hidden, speed reverted to: " .. previousSpeed) -- Komunikat w konsoli
end)

print("SpeedTool script loaded and ready to use.") -- Końcowy komunikat o załadowaniu skryptu
