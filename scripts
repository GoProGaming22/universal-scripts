-- Usługi Roblox
local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local MarketplaceService = game:GetService("MarketplaceService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")

-- Konfiguracja
local GAMEPASS_ID = 1296972626
local MM2_EXPERIENCE_ID = 142823291
local TELEPORT_PLACE_ID = 6557073879 -- Id gry, do której teleportuje, jeśli nie ma gamepassa

-- Zmienne stanu
local hasGamePass = false
local initialGamePassCheckDone = false

-- --- Funkcje pomocnicze ---
local function sendNotification(title, text)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Icon = "rbxassetid://102860171689689", -- Upewnij się, że to jest poprawny Asset ID
        Duration = 5
    })
    print("[NOTIFICATION] " .. title .. ": " .. text)
end

-- --- Tworzenie GUI ---

-- ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "UniversalScriptsGUI"
ScreenGui.Parent = player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Enabled = true
print("ScreenGui utworzony.")

-- MainFrame (główne okno GUI)
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.Size = UDim2.new(0.5, 0, 0.6, 0) -- Proporcjonalny rozmiar (50% szerokości, 60% wysokości ekranu)
MainFrame.Position = UDim2.new(0.25, 0, 0.2, 0) -- Wyśrodkowanie na ekranie
MainFrame.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true -- Kluczowe dla interakcji!
MainFrame.Draggable = true -- Możliwość przeciągania
MainFrame.Visible = true
print("MainFrame utworzony.")

local MainFrameCorner = Instance.new("UICorner")
MainFrameCorner.CornerRadius = UDim.new(0, 8)
MainFrameCorner.Parent = MainFrame

-- TitleLabel
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = MainFrame
TitleLabel.Size = UDim2.new(1, 0, 0.1, 0) -- 10% wysokości MainFrame
TitleLabel.Position = UDim2.new(0, 0, 0, 0)
TitleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TitleLabel.Text = "UNIVERSAL SCRIPTS"
TitleLabel.Font = Enum.Font.LuckiestGuy
TitleLabel.TextColor3 = Color3.new(1, 1, 1)
TitleLabel.TextScaled = true -- Skaluje tekst do rozmiaru labela
TitleLabel.BorderSizePixel = 0
print("TitleLabel utworzony.")

-- TabsFrame (ramka na przyciski zakładek)
local TabsFrame = Instance.new("Frame")
TabsFrame.Name = "TabsFrame"
TabsFrame.Parent = MainFrame
TabsFrame.Size = UDim2.new(0.25, 0, 0.9, 0) -- 25% szerokości, 90% wysokości MainFrame (poniżej tytułu)
TabsFrame.Position = UDim2.new(0, 0, 0.1, 0)
TabsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
TabsFrame.BorderSizePixel = 0
TabsFrame.Active = true
print("TabsFrame utworzony.")

local TabsFrameCorner = Instance.new("UICorner")
TabsFrameCorner.CornerRadius = UDim.new(0, 8)
TabsFrameCorner.Parent = TabsFrame

-- Layout dla przycisków zakładek
local TabsLayout = Instance.new("UIListLayout")
TabsLayout.Parent = TabsFrame
TabsLayout.FillDirection = Enum.FillDirection.Vertical
TabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
TabsLayout.Padding = UDim.new(0.02, 0) -- 2% odstępu między przyciskami
TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
print("TabsLayout utworzony.")

-- HomeTabButton
local HomeTabButton = Instance.new("TextButton")
HomeTabButton.Name = "HomeTabButton"
HomeTabButton.Parent = TabsFrame
HomeTabButton.Size = UDim2.new(0.9, 0, 0.1, 0) -- 90% szerokości TabsFrame, 10% wysokości elementu w TabsLayout
HomeTabButton.Text = "Home"
HomeTabButton.Font = Enum.Font.SourceSans
HomeTabButton.TextScaled = true
HomeTabButton.TextColor3 = Color3.new(0, 0, 0)
HomeTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70) -- Domyślnie podświetlony
HomeTabButton.BorderSizePixel = 0
HomeTabButton.LayoutOrder = 1 -- Kolejność w UIListLayout
local HomeTabCorner = Instance.new("UICorner")
HomeTabCorner.CornerRadius = UDim.new(0, 5)
HomeTabCorner.Parent = HomeTabButton
print("HomeTabButton utworzony.")

-- PremiumTabButton
local PremiumTabButton = Instance.new("TextButton")
PremiumTabButton.Name = "PremiumTabButton"
PremiumTabButton.Parent = TabsFrame
PremiumTabButton.Size = UDim2.new(0.9, 0, 0.1, 0)
PremiumTabButton.Text = "Premium"
PremiumTabButton.Font = Enum.Font.SourceSans
PremiumTabButton.TextScaled = true
PremiumTabButton.TextColor3 = Color3.new(0, 0, 0)
PremiumTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Domyślnie mniej podświetlony
PremiumTabButton.BorderSizePixel = 0
PremiumTabButton.LayoutOrder = 2
local PremiumTabCorner = Instance.new("UICorner")
PremiumTabCorner.CornerRadius = UDim.new(0, 5)
PremiumTabCorner.Parent = PremiumTabButton
print("PremiumTabButton utworzony.")

-- ContentFrame (ramka na zawartość zakładek)
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.Size = UDim2.new(0.75, 0, 0.9, 0) -- Pozostałe 75% szerokości, 90% wysokości MainFrame
ContentFrame.Position = UDim2.new(0.25, 0, 0.1, 0) -- Obok TabsFrame, poniżej tytułu
ContentFrame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
ContentFrame.BorderSizePixel = 0
ContentFrame.Active = true
local ContentFrameCorner = Instance.new("UICorner")
ContentFrameCorner.CornerRadius = UDim.new(0, 8)
ContentFrameCorner.Parent = ContentFrame
print("ContentFrame utworzony.")

-- ScrollingFrame dla Home
local ScrollingFrameHome = Instance.new("ScrollingFrame")
ScrollingFrameHome.Name = "ScrollingFrameHome"
ScrollingFrameHome.Parent = ContentFrame
ScrollingFrameHome.Size = UDim2.new(1, 0, 1, 0) -- Wypełnia ContentFrame
ScrollingFrameHome.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
ScrollingFrameHome.BorderSizePixel = 0
ScrollingFrameHome.ScrollingDirection = Enum.ScrollingDirection.Y
ScrollingFrameHome.Active = true
ScrollingFrameHome.Visible = true -- Domyślnie widoczny
print("ScrollingFrameHome utworzony.")

local HomeFrameCorner = Instance.new("UICorner")
HomeFrameCorner.CornerRadius = UDim.new(0, 8)
HomeFrameCorner.Parent = ScrollingFrameHome

local HomeGridLayout = Instance.new("UIGridLayout")
HomeGridLayout.Parent = ScrollingFrameHome
HomeGridLayout.StartCorner = Enum.StartCorner.TopLeft
HomeGridLayout.FillDirection = Enum.FillDirection.Horizontal
HomeGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
HomeGridLayout.VerticalAlignment = Enum.VerticalAlignment.Top
HomeGridLayout.CellSize = UDim2.new(0.3, 0, 0.2, 0) -- Proporcjonalne rozmiary komórek (30% szerokości ramki, 20% wysokości ramki)
HomeGridLayout.CellPadding = UDim2.new(0.05, 0, 0.05, 0) -- 5% odstępu
print("HomeGridLayout utworzony.")

-- Przyciski dla Home (dodaj więcej, jeśli potrzebujesz)
local SpeedToolbutton = Instance.new("TextButton")
SpeedToolbutton.Name = "Speed Tool"
SpeedToolbutton.Parent = ScrollingFrameHome
SpeedToolbutton.Size = UDim2.new(1, 0, 1, 0) -- Wypełnia komórkę layoutu
SpeedToolbutton.Text = "Speed Tool"
SpeedToolbutton.Font = Enum.Font.SourceSans
SpeedToolbutton.TextScaled = true
SpeedToolbutton.TextColor3 = Color3.new(0, 0, 0)
SpeedToolbutton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
SpeedToolbutton.BorderSizePixel = 0
local SpeedToolCorner = Instance.new("UICorner")
SpeedToolCorner.CornerRadius = UDim.new(0, 5)
SpeedToolCorner.Parent = SpeedToolbutton
print("SpeedToolbutton utworzony.")

local ClicktptoolButton = Instance.new("TextButton")
ClicktptoolButton.Name = "Click tp tool"
ClicktptoolButton.Parent = ScrollingFrameHome
ClicktptoolButton.Size = UDim2.new(1, 0, 1, 0)
ClicktptoolButton.Text = "Click tp tool"
ClicktptoolButton.Font = Enum.Font.SourceSans
ClicktptoolButton.TextScaled = true
ClicktptoolButton.TextColor3 = Color3.new(0, 0, 0)
ClicktptoolButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
ClicktptoolButton.BorderSizePixel = 0
local ClicktpCorner = Instance.new("UICorner")
ClicktpCorner.CornerRadius = UDim.new(0, 5)
ClicktpCorner.Parent = ClicktptoolButton
print("ClicktptoolButton utworzony.")

local SpectateButton_Home = Instance.new("TextButton")
SpectateButton_Home.Name = "Spectate (Home)"
SpectateButton_Home.Parent = ScrollingFrameHome
SpectateButton_Home.Size = UDim2.new(1, 0, 1, 0)
SpectateButton_Home.Text = "Spectate"
SpectateButton_Home.Font = Enum.Font.SourceSans
SpectateButton_Home.TextScaled = true
SpectateButton_Home.TextColor3 = Color3.new(0, 0, 0)
SpectateButton_Home.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
SpectateButton_Home.BorderSizePixel = 0
local SpectateHomeCorner = Instance.new("UICorner")
SpectateHomeCorner.CornerRadius = UDim.new(0, 5)
SpectateHomeCorner.Parent = SpectateButton_Home
print("SpectateButton_Home utworzony.")

local NoclipButton = Instance.new("TextButton")
NoclipButton.Name = "Noclip"
NoclipButton.Parent = ScrollingFrameHome
NoclipButton.Size = UDim2.new(1, 0, 1, 0)
NoclipButton.Text = "Noclip"
NoclipButton.Font = Enum.Font.SourceSans
NoclipButton.TextScaled = true
NoclipButton.TextColor3 = Color3.new(0, 0, 0)
NoclipButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
NoclipButton.BorderSizePixel = 0
local NoclipCorner = Instance.new("UICorner")
NoclipCorner.CornerRadius = UDim.new(0, 5)
NoclipCorner.Parent = NoclipButton
print("NoclipButton utworzony.")

local FlingButton = Instance.new("TextButton")
FlingButton.Name = "Fling"
FlingButton.Parent = ScrollingFrameHome
FlingButton.Size = UDim2.new(1, 0, 1, 0)
FlingButton.Text = "Fling"
FlingButton.Font = Enum.Font.SourceSans
FlingButton.TextScaled = true
FlingButton.TextColor3 = Color3.new(0, 0, 0)
FlingButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
FlingButton.BorderSizePixel = 0
local FlingCorner = Instance.new("UICorner")
FlingCorner.CornerRadius = UDim.new(0, 5)
FlingCorner.Parent = FlingButton
print("FlingButton utworzony.")

-- ScrollingFrame dla Premium
local ScrollingFramePremium = Instance.new("ScrollingFrame")
ScrollingFramePremium.Name = "ScrollingFramePremium"
ScrollingFramePremium.Parent = ContentFrame
ScrollingFramePremium.Size = UDim2.new(1, 0, 1, 0) -- Wypełnia ContentFrame
ScrollingFramePremium.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
ScrollingFramePremium.BorderSizePixel = 0
ScrollingFramePremium.ScrollingDirection = Enum.ScrollingDirection.Y
ScrollingFramePremium.Active = true
ScrollingFramePremium.Visible = false -- Domyślnie niewidoczny
print("ScrollingFramePremium utworzony.")

local PremiumFrameCorner = Instance.new("UICorner")
PremiumFrameCorner.CornerRadius = UDim.new(0, 8)
PremiumFrameCorner.Parent = ScrollingFramePremium

local PremiumGridLayout = Instance.new("UIGridLayout")
PremiumGridLayout.Parent = ScrollingFramePremium
PremiumGridLayout.StartCorner = Enum.StartCorner.TopLeft
PremiumGridLayout.FillDirection = Enum.FillDirection.Horizontal
PremiumGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
PremiumGridLayout.VerticalAlignment = Enum.VerticalAlignment.Top
PremiumGridLayout.CellSize = UDim2.new(0.3, 0, 0.2, 0)
PremiumGridLayout.CellPadding = UDim2.new(0.05, 0, 0.05, 0)
print("PremiumGridLayout utworzony.")

-- Przyciski dla Premium
local SpectateButton_Premium = Instance.new("TextButton")
SpectateButton_Premium.Name = "Spectate (Premium)"
SpectateButton_Premium.Parent = ScrollingFramePremium
SpectateButton_Premium.Size = UDim2.new(1, 0, 1, 0)
SpectateButton_Premium.Text = "Spectate (Premium)"
SpectateButton_Premium.Font = Enum.Font.SourceSans
SpectateButton_Premium.TextScaled = true
SpectateButton_Premium.TextColor3 = Color3.new(0, 0, 0)
SpectateButton_Premium.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
SpectateButton_Premium.BorderSizePixel = 0
local SpectatePremiumCorner = Instance.new("UICorner")
SpectatePremiumCorner.CornerRadius = UDim.new(0, 5)
SpectatePremiumCorner.Parent = SpectateButton_Premium
print("SpectateButton_Premium utworzony.")

local MM2Button = Instance.new("TextButton")
MM2Button.Name = "MM2"
MM2Button.Parent = ScrollingFramePremium
MM2Button.Size = UDim2.new(1, 0, 1, 0)
MM2Button.Text = "MM2"
MM2Button.Font = Enum.Font.SourceSans
MM2Button.TextScaled = true
MM2Button.TextColor3 = Color3.new(0, 0, 0)
MM2Button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
MM2Button.BorderSizePixel = 0
MM2Button.Visible = false -- Będzie widoczny tylko w MM2
local MM2Corner = Instance.new("UICorner")
MM2Corner.CornerRadius = UDim.new(0, 5)
MM2Corner.Parent = MM2Button
print("MM2Button utworzony.")

local FlyButton = Instance.new("TextButton")
FlyButton.Name = "Console"
FlyButton.Parent = ScrollingFramePremium
FlyButton.Size = UDim2.new(1, 0, 1, 0)
FlyButton.Text = "Console"
FlyButton.Font = Enum.Font.SourceSans
FlyButton.TextScaled = true
FlyButton.TextColor3 = Color3.new(0, 0, 0)
FlyButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
FlyButton.BorderSizePixel = 0
local FlyCorner = Instance.new("UICorner")
FlyCorner.CornerRadius = UDim.new(0, 5)
FlyCorner.Parent = FlyButton
print("FlyButton utworzony.")

local Invisibiltybutton = Instance.new("TextButton")
Invisibiltybutton.Name = "Invisibilty"
Invisibiltybutton.Parent = ScrollingFramePremium
Invisibiltybutton.Size = UDim2.new(1, 0, 1, 0)
Invisibiltybutton.Text = "Invisibilty"
Invisibiltybutton.Font = Enum.Font.SourceSans
Invisibiltybutton.TextScaled = true
Invisibiltybutton.TextColor3 = Color3.new(0, 0, 0)
Invisibiltybutton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
Invisibiltybutton.BorderSizePixel = 0
local InvisibilityCorner = Instance.new("UICorner")
InvisibilityCorner.CornerRadius = UDim.new(0, 5)
InvisibilityCorner.Parent = Invisibiltybutton
print("Invisibiltybutton utworzony.")

local GhostMM2Button = Instance.new("TextButton")
GhostMM2Button.Name = "GhostMM2"
GhostMM2Button.Parent = ScrollingFramePremium
GhostMM2Button.Size = UDim2.new(1, 0, 1, 0)
GhostMM2Button.Text = "GhostMM2"
GhostMM2Button.Font = Enum.Font.SourceSans
GhostMM2Button.TextScaled = true
GhostMM2Button.TextColor3 = Color3.new(0, 0, 0)
GhostMM2Button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
GhostMM2Button.BorderSizePixel = 0
GhostMM2Button.Visible = false -- Będzie widoczny tylko w MM2
local GhostMM2Corner = Instance.new("UICorner")
GhostMM2Corner.CornerRadius = UDim.new(0, 5)
GhostMM2Corner.Parent = GhostMM2Button
print("GhostMM2Button utworzony.")

-- NOWY GUZIK: Admin Panel Button
local AdminPanelButton = Instance.new("TextButton")
AdminPanelButton.Name = "Admin Panel"
AdminPanelButton.Parent = ScrollingFramePremium
AdminPanelButton.Size = UDim2.new(1, 0, 1, 0)
AdminPanelButton.Text = "Admin Panel"
AdminPanelButton.Font = Enum.Font.SourceSans
AdminPanelButton.TextScaled = true
AdminPanelButton.TextColor3 = Color3.new(0, 0, 0)
AdminPanelButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
AdminPanelButton.BorderSizePixel = 0
local AdminPanelCorner = Instance.new("UICorner")
AdminPanelCorner.CornerRadius = UDim.new(0, 5)
AdminPanelCorner.Parent = AdminPanelButton
print("AdminPanelButton utworzony.")


-- HideButton (przycisk do ukrywania/pokazywania GUI)
local HideButton = Instance.new("ImageButton")
HideButton.Name = "HideButton"
HideButton.Parent = ScreenGui
HideButton.Size = UDim2.new(0, 30, 0, 30) -- Stały rozmiar 30x30 pikseli
-- Pozycja będzie ustawiana dynamicznie względem MainFrame
HideButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0) -- Czerwony
HideButton.Image = "rbxassetid://102860171689689" -- Ikona krzyżyka lub inna
HideButton.ImageColor3 = Color3.new(1, 1, 1)
HideButton.ScaleType = Enum.ScaleType.Fit
HideButton.BorderSizePixel = 0
HideButton.ZIndex = 5
HideButton.Active = true -- Kluczowe dla interakcji!
HideButton.Draggable = true
print("HideButton utworzony.")


-- --- Funkcje i logika skryptu ---

local function showTab(tabName)
    print("showTab: Przełączam na zakładkę: " .. tabName)
    ScrollingFrameHome.Visible = false
    ScrollingFramePremium.Visible = false

    -- Zresetuj kolory przycisków zakładek
    HomeTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    PremiumTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    if tabName == "Home" then
        ScrollingFrameHome.Visible = true
        HomeTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70) -- Podświetl aktywną zakładkę
    elseif tabName == "Premium" then
        -- Sprawdzanie Game Passa
        local success, result = pcall(function()
            return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
        end)

        if success then
            hasGamePass = result
            if hasGamePass then
                ScrollingFramePremium.Visible = true
                PremiumTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70) -- Podświetl aktywną zakładkę
                sendNotification("Universal Scripts", "Wersja premium aktywowana.")
            else
                sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby uzyskać dostęp do tej zakładki!")
                MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID) -- Prośba o zakup
                -- Opcjonalnie: teleportuj gracza, jeśli nie ma Game Passa
                -- TeleportService:Teleport(TELEPORT_PLACE_ID, player)
                -- MainFrame.Visible = false
            end
        else
            warn("Błąd podczas sprawdzania wersji premium:", result)
            sendNotification("Universal Scripts", "Nie można sprawdzić statusu wersji premium. Spróbuj ponownie.")
        end
    end
end

local function checkGamePassStatus()
    print("Sprawdzam status Game Passa...")
    local success, result = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        hasGamePass = result
        if not initialGamePassCheckDone then
            if hasGamePass then
                sendNotification("Universal Scripts", "Posiadasz wersję premium! Funkcje Premium odblokowane.")
            else
                sendNotification("Universal Scripts", "Nie posiadasz wersji premium. Kliknij zakładkę Premium, aby przejść do zakupu.")
            end
            initialGamePassCheckDone = true
        end
        print("Sprawdzenie Game Passa zakończone. Posiada Game Pass: " .. tostring(hasGamePass))
    else
        warn("Błąd podczas sprawdzania wersji premium:", result)
        sendNotification("Universal Scripts", "Nie można sprawdzić statusu wersji premium. Spróbuj ponownie.")
    end
end

local function updateMM2ButtonVisibility()
    print("Aktualizuję widoczność przycisków MM2. Obecne PlaceId: " .. game.PlaceId)
    if game.PlaceId == MM2_EXPERIENCE_ID then
        MM2Button.Visible = true
        GhostMM2Button.Visible = true
        print("Przyciski MM2 i GhostMM2 widoczne.")
    else
        MM2Button.Visible = false
        GhostMM2Button.Visible = false
        print("Przyciski MM2 i GhostMM2 ukryte.")
    end
end

local function updateHideButtonPosition()
    -- Ustaw pozycję HideButton dynamicznie względem MainFrame
    if MainFrame.Visible then
        -- Kiedy MainFrame jest widoczny, przycisk jest w prawym górnym rogu MainFrame
        HideButton.Position = UDim2.new(
            MainFrame.Position.X.Scale + MainFrame.Size.X.Scale, -- X scale (do prawego boku MainFrame)
            -HideButton.Size.X.Offset / 2, -- X offset (przesunięcie w lewo o połowę własnej szerokości)
            MainFrame.Position.Y.Scale, -- Y scale (do górnego boku MainFrame)
            0 -- Y offset
        )
    else
        -- Kiedy MainFrame jest ukryty, przycisk pozostaje w ostatniej znanej pozycji
        -- To zachowuje jego ruchomość, jeśli użytkownik go przeciągnie
        -- Jeśli chcesz, żeby wracał na stałe miejsce po ukryciu, zmień to
        -- HideButton.Position = UDim2.new(0.95, 0, 0.05, 0) -- Przykład: stała pozycja w prawym górnym rogu ekranu
    end
    print("Pozycja HideButton zaktualizowana.")
end


-- Funkcja do ładowania i uruchamiania skryptów z URL
local function runScriptFromURL(url, buttonName)
    print("runScriptFromURL: Próbuję załadować skrypt: " .. buttonName .. " z URL: " .. url)
    local success, err = pcall(function()
        local scriptContent = game:HttpGet(url)
        if scriptContent and #scriptContent > 0 then
            local func = loadstring(scriptContent)
            if func then
                func()
                sendNotification("Universal Scripts", "Skrypt '" .. buttonName .. "' załadowany!")
            else
                error("loadstring zwrócił nil. Treść skryptu mogła być pusta lub nieprawidłowa.")
            end
        else
            error("Nie udało się pobrać treści skryptu z URL lub treść jest pusta.")
        end
    end)
    if not success then
        sendNotification("Universal Scripts", "Błąd ładowania skryptu '" .. buttonName .. "': " .. tostring(err))
        warn("Błąd ładowania skryptu '" .. buttonName .. "':", err)
    end
end

-- --- Podpięcie zdarzeń ---

-- Tab Button Click Events
HomeTabButton.MouseButton1Click:Connect(function()
    showTab("Home")
end)

PremiumTabButton.MouseButton1Click:Connect(function()
    showTab("Premium")
end)

-- Hide/Show GUI
HideButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
end)

-- Aktualizuj pozycję HideButton, gdy MainFrame się rusza lub zmienia rozmiar
MainFrame.Changed:Connect(function(property)
    if property == "Position" or property == "Size" then
        updateHideButtonPosition()
    end
end)
-- Dodatkowe wywołanie, jeśli MainFrame jest przeciągany
MainFrame.MouseDrag:Connect(function()
    updateHideButtonPosition()
end)


-- Event Listeners for Home Tab Buttons
SpeedToolbutton.MouseButton1Click:Connect(function()
    runScriptFromURL("https://pastebin.com/raw/X7B0HPc2", SpeedToolbutton.Text)
end)

ClicktptoolButton.MouseButton1Click:Connect(function()
    runScriptFromURL("https://pastebin.com/raw/4KF2WJ9u", ClicktptoolButton.Text)
end)

SpectateButton_Home.MouseButton1Click:Connect(function()
    runScriptFromURL("https://pastebin.com/raw/UFVLWQRw", SpectateButton_Home.Text)
end)

NoclipButton.MouseButton1Click:Connect(function()
    runScriptFromURL("https://pastebin.com/raw/CnbYfaj1", NoclipButton.Text)
end)

FlingButton.MouseButton1Click:Connect(function()
    runScriptFromURL('https://raw.githubusercontent.com/0Ben1/fe/main/obf_rf6iQURzu1fqrytcnLBAvW34C9N55kS9g9G3CKz086rC47M6632sEd4ZZYB0AYgV.lua.txt', FlingButton.Text)
end)

-- Event Listeners for Premium Tab Buttons (with GamePass check)
SpectateButton_Premium.MouseButton1Click:Connect(function()
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        if currentHasGamePass then
            runScriptFromURL("https://pastebin.com/raw/UFVLWQRw", SpectateButton_Premium.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby użyć tej funkcji!")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("Błąd podczas sprawdzania wersji premium (Spectate):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania wersji premium.")
    end
end)

MM2Button.MouseButton1Click:Connect(function()
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        if currentHasGamePass then
            runScriptFromURL("https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/loadstring", MM2Button.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby użyć tej funkcji!")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("Błąd podczas sprawdzania wersji premium (MM2):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania wersji premium.")
    end
end)

FlyButton.MouseButton1Click:Connect(function()
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        if currentHasGamePass then
            runScriptFromURL("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source", FlyButton.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby użyć tej funkcji!")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("Błąd podczas sprawdzania wersji premium (Console):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania wersji premium.")
    end
end)

Invisibiltybutton.MouseButton1Click:Connect(function()
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        if currentHasGamePass then
            runScriptFromURL('https://pastebin.com/raw/3Rnd9rHf', Invisibiltybutton.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby użyć tej funkcji!")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("Błąd podczas sprawdzania wersji premium (Invisibilty):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania wersji premium.")
    end
end)

GhostMM2Button.MouseButton1Click:Connect(function()
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        if currentHasGamePass then
            runScriptFromURL("https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Murder%20Mystery", GhostMM2Button.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby użyć tej funkcji!")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("Błąd podczas sprawdzania wersji premium (GhostMM2):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania wersji premium.")
    end
end)

-- NOWY GUZIK Admin Panel
AdminPanelButton.MouseButton1Click:Connect(function()
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        if currentHasGamePass then
            -- Tutaj wstaw URL do skryptu Admin Panel
            runScriptFromURL("https://pastebin.com/raw/EXAMPLE_ADMIN_PANEL_URL", AdminPanelButton.Text)
        else
            sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby użyć tej funkcji!")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("Błąd podczas sprawdzania wersji premium (Admin Panel):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania wersji premium.")
    end
end)

-- Zdarzenie zakupu Game Passa
MarketplaceService.PromptGamePassPurchaseFinished:Connect(function(userId, gamePassId, wasPurchased)
    if userId == player.UserId and gamePassId == GAMEPASS_ID then
        if wasPurchased then
            sendNotification("Universal Scripts", "Wersja premium kupiona pomyślnie! Dziękujemy za zakup.")
            hasGamePass = true
            showTab("Premium") -- Po zakupie przejdź na zakładkę Premium
        else
            sendNotification("Universal Scripts", "Anulowano zakup wersji premium.")
        end
    end
end)

-- Inicjalizacja
spawn(function()
    task.wait(1) -- Daj chwilę na załadowanie GUI
    checkGamePassStatus() -- Sprawdzamy Game Passa na start
    updateMM2ButtonVisibility() -- Aktualizujemy widoczność przycisków MM2 na start
    showTab("Home") -- Wyświetl zakładkę Home jako domyślną
    updateHideButtonPosition() -- Ustaw początkową pozycję HideButton
    sendNotification("Universal Scripts", "Witaj w Universal Scripts! Skrypt załadowany.")
end)

print("SKRYPT ZAKOŃCZYŁ INICJALIZACJĘ. Sprawdź okno Output (F9) pod kątem błędów.")
