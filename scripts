--[[
    Przeskalowany skrypt GUI dla Universal Scripts
    - Używa skalowania (Scale) zamiast stałych pikseli (Offset) dla lepszej adaptacji.
    - Wykorzystuje UIGridLayout do automatycznego rozmieszczania przycisków.
    - Wyśrodkowuje główne okno na ekranie.
]]

-- Usługi i zmienne globalne (bez zmian)
local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local MarketplaceService = game:GetService("MarketplaceService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")

local GAMEPASS_ID = 1296972626
local MM2_EXPERIENCE_ID = 142823291
local TELEPORT_PLACE_ID = 6557073879

local hasGamePass = false
local initialGamePassCheckDone = false
local lastHideButtonPosition = UDim2.new(1, -55, 0, 10)

-- Funkcja powiadomień (bez zmian)
local function sendNotification(title, text)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Icon = "rbxassetid://102860171689689",
        Duration = 5
    })
end

-- ###############################################################
-- ##        NOWA, PRZESKALOWANA CZĘŚĆ TWORZĄCA GUI             ##
-- ###############################################################

-- Usuń stare GUI, jeśli istnieje, aby uniknąć duplikatów przy ponownym uruchomieniu
pcall(function()
    player.PlayerGui:FindFirstChild("UniversalScriptsGUI"):Destroy()
end)

-- Główny kontener GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "UniversalScriptsGUI"
ScreenGui.Parent = player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Główne okno aplikacji
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BorderSizePixel = 2
MainFrame.Draggable = true
MainFrame.Active = true
-- Ustawienie AnchorPoint i Position na środek ekranu
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
-- Rozmiar jako procent ekranu - większy na telefonie
MainFrame.Size = UDim2.new(0.85, 0, 0.7, 0) 
if UserInputService.TouchEnabled then -- Jeśli to urządzenie dotykowe, powiększ okno
    MainFrame.Size = UDim2.new(0.95, 0, 0.8, 0)
end

local MainFrame_UICorner = Instance.new("UICorner")
MainFrame_UICorner.CornerRadius = UDim.new(0, 12)
MainFrame_UICorner.Parent = MainFrame

-- Tytuł
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = MainFrame
TitleLabel.BackgroundTransparency = 1
TitleLabel.Size = UDim2.new(1, -20, 0.1, 0) -- Szerokość 100% (-20px marginesu), Wysokość 10%
TitleLabel.Position = UDim2.new(0.5, 0, 0.05, 0) -- Wyśrodkowany
TitleLabel.AnchorPoint = Vector2.new(0.5, 0.5)
TitleLabel.Font = Enum.Font.LuckiestGuy
TitleLabel.Text = "UNIVERSAL SCRIPTS"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextScaled = true

-- Ramka na zakładki (Tabs)
local TabsFrame = Instance.new("Frame")
TabsFrame.Name = "TabsFrame"
TabsFrame.Parent = MainFrame
TabsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
TabsFrame.BorderSizePixel = 0
TabsFrame.AnchorPoint = Vector2.new(0, 0.5)
TabsFrame.Position = UDim2.new(0, 10, 0.55, 0) -- Przesunięta na środek wysokości
TabsFrame.Size = UDim2.new(0.25, 0, 0.8, 0) -- 25% szerokości, 80% wysokości

local TabsFrame_UICorner = Instance.new("UICorner")
TabsFrame_UICorner.Parent = TabsFrame

-- Layout dla przycisków zakładek
local TabsLayout = Instance.new("UIListLayout")
TabsLayout.Parent = TabsFrame
TabsLayout.FillDirection = Enum.FillDirection.Vertical
TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
TabsLayout.Padding = UDim.new(0, 10)

-- Przycisk zakładki Home
local HomeTabButton = Instance.new("TextButton")
HomeTabButton.Name = "HomeTabButton"
HomeTabButton.Parent = TabsFrame
HomeTabButton.BackgroundColor3 = Color3.fromRGB(107, 107, 107)
HomeTabButton.Size = UDim2.new(0.9, 0, 0.15, 0) -- 90% szerokości, 15% wysokości layoutu
HomeTabButton.Font = Enum.Font.SourceSans
HomeTabButton.Text = "Home"
HomeTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HomeTabButton.TextScaled = true
local HomeTabButton_UICorner = Instance.new("UICorner")
HomeTabButton_UICorner.Parent = HomeTabButton

-- Przycisk zakładki Premium
local PremiumTabButton = Instance.new("TextButton")
PremiumTabButton.Name = "PremiumTabButton"
PremiumTabButton.Parent = TabsFrame
PremiumTabButton.BackgroundColor3 = Color3.fromRGB(107, 107, 107)
PremiumTabButton.Size = UDim2.new(0.9, 0, 0.15, 0)
PremiumTabButton.Font = Enum.Font.SourceSans
PremiumTabButton.Text = "Premium"
PremiumTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PremiumTabButton.TextScaled = true
local PremiumTabButton_UICorner = Instance.new("UICorner")
PremiumTabButton_UICorner.Parent = PremiumTabButton

-- Funkcja do tworzenia ramek z zawartością (aby nie powtarzać kodu)
local function createContentFrame(name)
    local frame = Instance.new("ScrollingFrame")
    frame.Name = name
    frame.Parent = MainFrame
    frame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
    frame.BorderSizePixel = 0
    frame.AnchorPoint = Vector2.new(1, 0.5)
    frame.Position = UDim2.new(1, -10, 0.55, 0)
    frame.Size = UDim2.new(0.7, 0, 0.8, 0)
    frame.CanvasSize = UDim2.new(0, 0, 2, 0) -- Pozwala na przewijanie
    frame.ScrollBarImageColor3 = Color3.fromRGB(200, 200, 200)
    frame.Visible = false

    local frame_UICorner = Instance.new("UICorner")
    frame_UICorner.Parent = frame

    -- UIGridLayout do automatycznego układania przycisków
    local gridLayout = Instance.new("UIGridLayout")
    gridLayout.Parent = frame
    gridLayout.CellSize = UDim2.new(0.45, 0, 0.15, 0) -- Rozmiar każdego przycisku
    gridLayout.CellPadding = UDim2.new(0.03, 0, 0.03, 0) -- Odstępy
    gridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    gridLayout.SortOrder = Enum.SortOrder.LayoutOrder

    return frame
end

local ScrollingFrameHome = createContentFrame("ScrollingFrameHome")
local ScrollingFramePremium = createContentFrame("ScrollingFramePremium")

-- Funkcja do tworzenia przycisków (aby nie powtarzać kodu)
local function createFeatureButton(parent, text, name)
    local button = Instance.new("TextButton")
    button.Name = name or text .. " Button"
    button.Parent = parent
    button.BackgroundColor3 = Color3.fromRGB(91, 91, 91)
    button.Font = Enum.Font.SourceSans
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.TextWrapped = true

    local button_UICorner = Instance.new("UICorner")
    button_UICorner.Parent = button

    return button
end

-- Przyciski w zakładce Home
local SpeedToolbutton = createFeatureButton(ScrollingFrameHome, "Speed Tool")
local ClicktptoolButton = createFeatureButton(ScrollingFrameHome, "Click TP Tool")
local SpectateButton_Home = createFeatureButton(ScrollingFrameHome, "Spectate", "Spectate Button")
local NoclipButton = createFeatureButton(ScrollingFrameHome, "Noclip")
local FlingButton = createFeatureButton(ScrollingFrameHome, "Fling")

-- Przyciski w zakładce Premium
local SpectateButton_Premium = createFeatureButton(ScrollingFramePremium, "Spectate", "Spectate Button Premium")
local MM2Button = createFeatureButton(ScrollingFramePremium, "MM2")
local FlyButton = createFeatureButton(ScrollingFramePremium, "Console", "Console Button") -- Zmieniono nazwę na "Console"
local Invisibiltybutton = createFeatureButton(ScrollingFramePremium, "Invisibility")
local GhostMM2Button = createFeatureButton(ScrollingFramePremium, "GhostMM2")

MM2Button.Visible = false -- Domyślnie ukryte
GhostMM2Button.Visible = false -- Domyślnie ukryte

-- Przycisk do ukrywania/pokazywania GUI
local HideButton = Instance.new("ImageButton")
HideButton.Name = "HideButton"
HideButton.Parent = ScreenGui -- Nadrzędny to ScreenGui, żeby był widoczny po ukryciu MainFrame
HideButton.Image = "rbxassetid://102860171689689"
HideButton.BackgroundTransparency = 1
HideButton.Size = UDim2.new(0, 40, 0, 40) -- Rozmiar w pikselach jest OK dla małego przycisku
HideButton.Position = UDim2.new(1, -50, 0, 10) -- Domyślna pozycja w prawym górnym rogu
HideButton.ZIndex = 5
HideButton.Draggable = true

-- ###############################################################
-- ##                KONIEC NOWEJ CZĘŚCI GUI                    ##
-- ###############################################################


---
## Funkcje pomocnicze i logika (głównie bez zmian, dostosowane do nowych nazw)
---

-- Funkcja do przełączania widoczności zakładek
local function showTab(tabName)
    ScrollingFrameHome.Visible = false
    ScrollingFramePremium.Visible = false

    if tabName == "Home" then
        ScrollingFrameHome.Visible = true
    elseif tabName == "Premium" then
        if hasGamePass then
            ScrollingFramePremium.Visible = true
        else
            sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby uzyskać dostęp do tej zakładki!")
            TeleportService:Teleport(TELEPORT_PLACE_ID, player)
            MainFrame.Visible = false -- Ukryj GUI po teleportacji
        end
    end
end

-- Funkcja do sprawdzania statusu GamePassa
local function checkGamePassStatus()
    local success, result = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        hasGamePass = result
        if not initialGamePassCheckDone then
            if hasGamePass then
                sendNotification("Universal Scripts", "Posiadasz wersję premium! Funkcje Premium odblokowane.")
            else
                sendNotification("Universal Scripts", "Nie posiadasz wersji premium. Kliknij zakładkę Premium, aby przejść do zakupu.")
            end
            initialGamePassCheckDone = true
        end
    else
        warn("Błąd podczas sprawdzania wersji premium:", result)
        sendNotification("Universal Scripts", "Nie można sprawdzić statusu wersji premium. Spróbuj ponownie.")
        hasGamePass = false
    end
end

-- Funkcja do aktualizacji widoczności przycisków MM2
local function updateMM2ButtonVisibility()
    local isMM2 = (game.PlaceId == MM2_EXPERIENCE_ID)
    MM2Button.Visible = isMM2
    GhostMM2Button.Visible = isMM2
end

-- Funkcja do aktualizacji pozycji przycisku ukrywania GUI
local function updateHideButtonPosition()
    if MainFrame.Visible then
        local framePos = MainFrame.AbsolutePosition
        local frameSize = MainFrame.AbsoluteSize
        -- Przypnij do prawego górnego rogu MainFrame
        HideButton.Position = UDim2.fromOffset(framePos.X + frameSize.X - HideButton.AbsoluteSize.X, framePos.Y)
        lastHideButtonPosition = HideButton.Position
    else
        HideButton.Position = lastHideButtonPosition -- Przywróć ostatnią zapamiętaną pozycję
    end
end

-- Funkcja do uruchamiania skryptów (bez zmian)
local function runScriptAndNotify(url, buttonName)
    local success, err = pcall(function()
        loadstring(game:HttpGet(url))()
    end)
    if success then
        sendNotification("Universal Scripts", "Skrypt '" .. buttonName .. "' załadowany!")
    else
        sendNotification("Universal Scripts", "Błąd ładowania skryptu '" .. buttonName .. "': " .. tostring(err))
        warn("Błąd ładowania skryptu '" .. buttonName .. "':", err)
    end
end

---
## Połączenia przycisków i zdarzeń (logika bez zmian)
---

-- Połączenia przycisków Home
SpeedToolbutton.MouseButton1Click:Connect(function()
    runScriptAndNotify("https://pastebin.com/raw/X7B0HPc2", SpeedToolbutton.Text)
end)

ClicktptoolButton.MouseButton1Click:Connect(function()
    runScriptAndNotify("https://pastebin.com/raw/4KF2WJ9u", ClicktptoolButton.Text)
end)

SpectateButton_Home.MouseButton1Click:Connect(function()
    runScriptAndNotify("https://pastebin.com/raw/UFVLWQRw", SpectateButton_Home.Text)
end)

NoclipButton.MouseButton1Click:Connect(function()
    runScriptAndNotify("https://pastebin.com/raw/CnbYfaj1", NoclipButton.Text)
end)

FlingButton.MouseButton1Click:Connect(function()
    runScriptAndNotify('https://raw.githubusercontent.com/0Ben1/fe/main/obf_rf6iQURzu1fqrytcnLBAvW34C9N55kS9g9G3CKz086rC47M6632sEd4ZZYB0AYgV.lua.txt', FlingButton.Text)
end)

-- Połączenia przycisków Premium - Zawsze sprawdzaj hasGamePass przed wykonaniem akcji
local function premiumAction(callback, buttonText, url)
    local success, currentHasGamePass = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        if currentHasGamePass then
            callback(url, buttonText)
        else
            sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby użyć tej funkcji!")
            MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID)
        end
    else
        warn("Błąd podczas sprawdzania wersji premium ("..buttonText.."):", currentHasGamePass)
        sendNotification("Universal Scripts", "Wystąpił błąd podczas sprawdzania wersji premium.")
    end
end

SpectateButton_Premium.MouseButton1Click:Connect(function() premiumAction(runScriptAndNotify, SpectateButton_Premium.Text, "https://pastebin.com/raw/UFVLWQRw") end)
MM2Button.MouseButton1Click:Connect(function() premiumAction(runScriptAndNotify, MM2Button.Text, "https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/loadstring") end)
FlyButton.MouseButton1Click:Connect(function() premiumAction(runScriptAndNotify, FlyButton.Text, "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source") end)
Invisibiltybutton.MouseButton1Click:Connect(function() premiumAction(runScriptAndNotify, Invisibiltybutton.Text, 'https://pastebin.com/raw/3Rnd9rHf') end)
GhostMM2Button.MouseButton1Click:Connect(function() premiumAction(runScriptAndNotify, GhostMM2Button.Text, "https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Murder%20Mystery") end)


-- Połączenia zakładek i ukrywania/pokazywania GUI
HomeTabButton.MouseButton1Click:Connect(function() showTab("Home") end)
PremiumTabButton.MouseButton1Click:Connect(function() showTab("Premium") end)
HideButton.MouseButton1Click:Connect(function() MainFrame.Visible = not MainFrame.Visible end)
MainFrame:GetPropertyChangedSignal("Visible"):Connect(updateHideButtonPosition)
HideButton:GetPropertyChangedSignal("Position"):Connect(function()
    if not MainFrame.Visible then lastHideButtonPosition = HideButton.Position end
end)
RunService.RenderStepped:Connect(function() if MainFrame.Draggable and MainFrame.Visible then updateHideButtonPosition() end end)

-- Logika dla zmiany PlaceId i GamePassa
local lastPlaceId = game.PlaceId
RunService.Stepped:Connect(function()
    if game.PlaceId ~= lastPlaceId then
        lastPlaceId = game.PlaceId
        updateMM2ButtonVisibility()
        if ScrollingFramePremium.Visible then
            showTab("Premium")
        end
    end
end)

-- Dodatkowe sprawdzenia
player.CharacterAdded:Connect(updateMM2ButtonVisibility)
game.Loaded:Connect(updateMM2ButtonVisibility)

-- Obsługa ukończenia zakupu GamePassa
MarketplaceService.PromptGamePassPurchaseFinished:Connect(function(userId, gamePassId, wasPurchased)
    if userId == player.UserId and gamePassId == GAMEPASS_ID then
        if wasPurchased then
            sendNotification("Universal Scripts", "Wersja premium kupiona pomyślnie! Dziękujemy za zakup.")
            hasGamePass = true
            showTab("Premium")
        else
            sendNotification("Universal Scripts", "Anulowano zakup wersji premium lub wystąpił błąd.")
            hasGamePass = false
            showTab("Home")
        end
    end
end)

---
## Inicjalizacja skryptu
---
task.spawn(function()
    sendNotification("Universal Scripts", "Witaj w Universal Scripts! Skrypt załadowany.")
    checkGamePassStatus()
    updateMM2ButtonVisibility()
    showTab("Home") -- Domyślnie pokaż zakładkę Home
    updateHideButtonPosition() -- Ustaw początkową pozycję przycisku Hide
end)
