-- Debugowanie: Potwierdzenie rozpoczęcia wykonywania skryptu
print("START: Skrypt rozpoczyna wykonywanie podstawowej struktury GUI.")

local player = game.Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local MarketplaceService = game:GetService("MarketplaceService") -- Potrzebne do gamepassa później
local TeleportService = game:GetService("TeleportService") -- Potrzebne do teleportacji później

local GAMEPASS_ID = 1296972626 -- Id Twojego Game Passa
local TELEPORT_PLACE_ID = 6557073879 -- Id gry, do której teleportuje

local hasGamePass = false -- Zmienna do przechowywania statusu Game Passa

local function sendNotification(title, text)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Icon = "rbxassetid://102860171689689", -- Upewnij się, że ten ID jest poprawny lub zmień na domyślny
        Duration = 5
    })
    print("[NOTIFICATION] " .. title .. ": " .. text)
end

-- Utworzenie elementów GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "UniversalScriptsGUI"
ScreenGui.Parent = player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
print("ScreenGui utworzony.")

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.Size = UDim2.new(0.5, 0, 0.6, 0) -- Rozsądny rozmiar
MainFrame.Position = UDim2.new(0.25, 0, 0.2, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(44, 44, 44) -- Ciemnoszary
MainFrame.BorderSizePixel = 0
MainFrame.Active = true -- Kluczowe dla interakcji!
MainFrame.Draggable = true
print("MainFrame utworzony.")

local UICornerMain = Instance.new("UICorner")
UICornerMain.CornerRadius = UDim.new(0, 8)
UICornerMain.Parent = MainFrame

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = MainFrame
TitleLabel.Size = UDim2.new(1, 0, 0.1, 0)
TitleLabel.Position = UDim2.new(0, 0, 0, 0)
TitleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TitleLabel.Text = "UNIVERSAL SCRIPTS"
TitleLabel.Font = Enum.Font.LuckiestGuy
TitleLabel.TextColor3 = Color3.new(1, 1, 1)
TitleLabel.TextScaled = true
TitleLabel.BorderSizePixel = 0
print("TitleLabel utworzony.")

local TabsFrame = Instance.new("Frame")
TabsFrame.Name = "TabsFrame"
TabsFrame.Parent = MainFrame
TabsFrame.Size = UDim2.new(0.25, 0, 0.9, 0) -- 25% szerokości MainFrame, 90% wysokości
TabsFrame.Position = UDim2.new(0, 0, 0.1, 0) -- Poniżej tytułu
TabsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
TabsFrame.BorderSizePixel = 0
TabsFrame.Active = true
print("TabsFrame utworzony.")

local TabsLayout = Instance.new("UIListLayout")
TabsLayout.Parent = TabsFrame
TabsLayout.FillDirection = Enum.FillDirection.Vertical
TabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
TabsLayout.Padding = UDim.new(0.02, 0) -- Odstęp między przyciskami
TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
print("TabsLayout utworzony.")

-- Przyciski zakładek
HomeTabButton.Name = "HomeTabButton"
HomeTabButton.Parent = TabsFrame
HomeTabButton.Size = UDim2.new(0.9, 0, 0.1, 0) -- 90% szerokości TabsFrame, 10% wysokości
HomeTabButton.Text = "Home"
HomeTabButton.Font = Enum.Font.SourceSans
HomeTabButton.TextScaled = true
HomeTabButton.TextColor3 = Color3.new(0, 0, 0)
HomeTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
HomeTabButton.BorderSizePixel = 0
HomeTabButton.LayoutOrder = 1
local UICornerHomeTab = Instance.new("UICorner")
UICornerHomeTab.Parent = HomeTabButton
UICornerHomeTab.CornerRadius = UDim.new(0, 5)
print("HomeTabButton utworzony.")

PremiumTabButton.Name = "PremiumTabButton"
PremiumTabButton.Parent = TabsFrame
PremiumTabButton.Size = UDim2.new(0.9, 0, 0.1, 0)
PremiumTabButton.Text = "Premium"
PremiumTabButton.Font = Enum.Font.SourceSans
PremiumTabButton.TextScaled = true
PremiumTabButton.TextColor3 = Color3.new(0, 0, 0)
PremiumTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Domyślnie mniej podświetlony
PremiumTabButton.BorderSizePixel = 0
PremiumTabButton.LayoutOrder = 2
local UICornerPremiumTab = Instance.new("UICorner")
UICornerPremiumTab.Parent = PremiumTabButton
UICornerPremiumTab.CornerRadius = UDim.new(0, 5)
print("PremiumTabButton utworzony.")

-- Kontekstowe ramki dla zawartości
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.Size = UDim2.new(0.75, 0, 0.9, 0) -- Pozostałe 75% szerokości MainFrame
ContentFrame.Position = UDim2.new(0.25, 0, 0.1, 0) -- Obok TabsFrame, poniżej tytułu
ContentFrame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
ContentFrame.BorderSizePixel = 0
ContentFrame.Active = true
local UICornerContent = Instance.new("UICorner")
UICornerContent.Parent = ContentFrame
UICornerContent.CornerRadius = UDim.new(0, 8)
print("ContentFrame utworzony.")

-- ScrollingFrame dla Home
local ScrollingFrameHome = Instance.new("ScrollingFrame")
ScrollingFrameHome.Name = "ScrollingFrameHome"
ScrollingFrameHome.Parent = ContentFrame
ScrollingFrameHome.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameHome.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
ScrollingFrameHome.CanvasSize = UDim2.new(0, 0, 2, 0) -- Duży CanvasSize na początek, później zaktualizujemy
ScrollingFrameHome.ScrollingDirection = Enum.ScrollingDirection.Y
ScrollingFrameHome.Active = true
ScrollingFrameHome.Visible = true -- Domyślnie widoczny
print("ScrollingFrameHome utworzony.")

local HomeGridLayout = Instance.new("UIGridLayout")
HomeGridLayout.Parent = ScrollingFrameHome
HomeGridLayout.StartCorner = Enum.StartCorner.TopLeft
HomeGridLayout.FillDirection = Enum.FillDirection.Horizontal
HomeGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
HomeGridLayout.VerticalAlignment = Enum.VerticalAlignment.Top
HomeGridLayout.CellSize = UDim2.new(0.3, 0, 0.2, 0) -- Proporcjonalne rozmiary komórek
HomeGridLayout.CellPadding = UDim2.new(0.05, 0, 0.05, 0)
print("HomeGridLayout utworzony.")

-- Przyciski dla Home
local SpeedToolbutton = Instance.new("TextButton")
SpeedToolbutton.Name = "Speed Tool"
SpeedToolbutton.Parent = ScrollingFrameHome
SpeedToolbutton.Size = UDim2.new(1, 0, 1, 0) -- Rozmiar zgodny z CellSize layoutu
SpeedToolbutton.Text = "Speed Tool"
SpeedToolbutton.Font = Enum.Font.SourceSans
SpeedToolbutton.TextScaled = true
SpeedToolbutton.TextColor3 = Color3.new(0, 0, 0)
SpeedToolbutton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
SpeedToolbutton.BorderSizePixel = 0
local UICornerSpeed = Instance.new("UICorner")
UICornerSpeed.Parent = SpeedToolbutton
UICornerSpeed.CornerRadius = UDim.new(0, 5)
print("SpeedToolbutton utworzony.")

local ClicktptoolButton = Instance.new("TextButton")
ClicktptoolButton.Name = "Click tp tool"
ClicktptoolButton.Parent = ScrollingFrameHome
ClicktptoolButton.Size = UDim2.new(1, 0, 1, 0)
ClicktptoolButton.Text = "Click tp tool"
ClicktptoolButton.Font = Enum.Font.SourceSans
ClicktptoolButton.TextScaled = true
ClicktptoolButton.TextColor3 = Color3.new(0, 0, 0)
ClicktptoolButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
ClicktptoolButton.BorderSizePixel = 0
local UICornerClicktp = Instance.new("UICorner")
UICornerClicktp.Parent = ClicktptoolButton
UICornerClicktp.CornerRadius = UDim.new(0, 5)
print("ClicktptoolButton utworzony.")

local SpectateButton_Home = Instance.new("TextButton")
SpectateButton_Home.Name = "Spectate (Home)"
SpectateButton_Home.Parent = ScrollingFrameHome
SpectateButton_Home.Size = UDim2.new(1, 0, 1, 0)
SpectateButton_Home.Text = "Spectate"
SpectateButton_Home.Font = Enum.Font.SourceSans
SpectateButton_Home.TextScaled = true
SpectateButton_Home.TextColor3 = Color3.new(0, 0, 0)
SpectateButton_Home.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
SpectateButton_Home.BorderSizePixel = 0
local UICornerSpectateHome = Instance.new("UICorner")
UICornerSpectateHome.Parent = SpectateButton_Home
UICornerSpectateHome.CornerRadius = UDim.new(0, 5)
print("SpectateButton_Home utworzony.")

-- ScrollingFrame dla Premium
local ScrollingFramePremium = Instance.new("ScrollingFrame")
ScrollingFramePremium.Name = "ScrollingFramePremium"
ScrollingFramePremium.Parent = ContentFrame
ScrollingFramePremium.Size = UDim2.new(1, 0, 1, 0)
ScrollingFramePremium.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
ScrollingFramePremium.CanvasSize = UDim2.new(0, 0, 2, 0) -- Duży CanvasSize na początek
ScrollingFramePremium.ScrollingDirection = Enum.ScrollingDirection.Y
ScrollingFramePremium.Active = true
ScrollingFramePremium.Visible = false -- Domyślnie niewidoczny
print("ScrollingFramePremium utworzony.")

local PremiumGridLayout = Instance.new("UIGridLayout")
PremiumGridLayout.Parent = ScrollingFramePremium
PremiumGridLayout.StartCorner = Enum.StartCorner.TopLeft
PremiumGridLayout.FillDirection = Enum.FillDirection.Horizontal
PremiumGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
PremiumGridLayout.VerticalAlignment = Enum.VerticalAlignment.Top
PremiumGridLayout.CellSize = UDim2.new(0.3, 0, 0.2, 0)
PremiumGridLayout.CellPadding = UDim2.new(0.05, 0, 0.05, 0)
print("PremiumGridLayout utworzony.")

-- Przyciski dla Premium
local SpectateButton_Premium = Instance.new("TextButton")
SpectateButton_Premium.Name = "Spectate (Premium)"
SpectateButton_Premium.Parent = ScrollingFramePremium
SpectateButton_Premium.Size = UDim2.new(1, 0, 1, 0)
SpectateButton_Premium.Text = "Spectate (Premium)"
SpectateButton_Premium.Font = Enum.Font.SourceSans
SpectateButton_Premium.TextScaled = true
SpectateButton_Premium.TextColor3 = Color3.new(0, 0, 0)
SpectateButton_Premium.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
SpectateButton_Premium.BorderSizePixel = 0
local UICornerSpectatePremium = Instance.new("UICorner")
UICornerSpectatePremium.Parent = SpectateButton_Premium
UICornerSpectatePremium.CornerRadius = UDim.new(0, 5)
print("SpectateButton_Premium utworzony.")

local MM2Button = Instance.new("TextButton")
MM2Button.Name = "MM2 Button"
MM2Button.Parent = ScrollingFramePremium
MM2Button.Size = UDim2.new(1, 0, 1, 0)
MM2Button.Text = "MM2"
MM2Button.Font = Enum.Font.SourceSans
MM2Button.TextScaled = true
MM2Button.TextColor3 = Color3.new(0, 0, 0)
MM2Button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
MM2Button.BorderSizePixel = 0
MM2Button.Visible = false -- Będzie widoczny tylko w MM2
local UICornerMM2 = Instance.new("UICorner")
UICornerMM2.Parent = MM2Button
UICornerMM2.CornerRadius = UDim.new(0, 5)
print("MM2Button utworzony.")

-- Przycisk Hide/Show GUI
HideButton.Name = "HideButton"
HideButton.Parent = ScreenGui
HideButton.Size = UDim2.new(0, 30, 0, 30)
HideButton.Position = UDim2.new(0.73, 0, 0.17, 0) -- Początkowa pozycja poza MainFrame
HideButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0) -- Czerwony
HideButton.Image = "rbxassetid://102860171689689" -- Ikona krzyżyka lub inna
HideButton.ImageColor3 = Color3.new(1, 1, 1)
HideButton.ScaleType = Enum.ScaleType.Fit
HideButton.BorderSizePixel = 0
HideButton.ZIndex = 5
HideButton.Active = true -- Kluczowe dla interakcji!
print("HideButton utworzony.")


---
## Funkcje skryptu
---

-- Funkcja do przełączania zakładek
local function showTab(tabName)
    print("showTab: Przełączam na zakładkę: " .. tabName)
    ScrollingFrameHome.Visible = false
    ScrollingFramePremium.Visible = false

    -- Zresetuj kolory przycisków zakładek
    HomeTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    PremiumTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    if tabName == "Home" then
        ScrollingFrameHome.Visible = true
        HomeTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70) -- Podświetl aktywną zakładkę
    elseif tabName == "Premium" then
        -- Sprawdzanie Game Passa
        local success, result = pcall(function()
            return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
        end)

        if success then
            hasGamePass = result
            if hasGamePass then
                ScrollingFramePremium.Visible = true
                PremiumTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70) -- Podświetl aktywną zakładkę
                sendNotification("Universal Scripts", "Wersja premium aktywowana.")
            else
                sendNotification("Universal Scripts", "Musisz posiadać wersję premium, aby uzyskać dostęp do tej zakładki!")
                MarketplaceService:PromptGamePassPurchase(player, GAMEPASS_ID) -- Prośba o zakup
                -- Opcjonalnie: teleportuj gracza, jeśli nie ma Game Passa
                -- TeleportService:Teleport(TELEPORT_PLACE_ID, player)
                -- MainFrame.Visible = false
            end
        else
            warn("Błąd podczas sprawdzania wersji premium:", result)
            sendNotification("Universal Scripts", "Nie można sprawdzić statusu wersji premium. Spróbuj ponownie.")
        end
    end
end

-- Funkcja do aktualizacji widoczności przycisków specyficznych dla MM2
local function updateMM2ButtonVisibility()
    if game.PlaceId == MM2_EXPERIENCE_ID then
        MM2Button.Visible = true
        -- Możesz dodać więcej przycisków MM2 tutaj
        print("MM2Button ustawiony na Visible = true")
    else
        MM2Button.Visible = false
        print("MM2Button ustawiony na Visible = false")
    end
end

-- Funkcja do dynamicznej aktualizacji CanvasSize dla Home
local function updateCanvasSizeHome()
    local children = ScrollingFrameHome:GetChildren()
    local buttonCount = 0
    for _, child in ipairs(children) do
        if child:IsA("TextButton") and child.Visible then -- Liczymy tylko widoczne przyciski
            buttonCount = buttonCount + 1
        end
    end

    local layout = HomeGridLayout
    if layout and layout.ClassName == "UIGridLayout" then
        local contentHeight = (layout.AbsoluteCellSize.Y + layout.AbsoluteCellPadding.Y) * math.ceil(buttonCount / math.max(1, math.floor(ScrollingFrameHome.AbsoluteSize.X / (layout.AbsoluteCellSize.X + layout.AbsoluteCellPadding.X))))
        ScrollingFrameHome.CanvasSize = UDim2.new(0, 0, 0, contentHeight + layout.AbsoluteCellPadding.Y)
        print("CanvasSizeHome zaktualizowany na: " .. tostring(ScrollingFrameHome.CanvasSize))
    end
end

-- Funkcja do dynamicznej aktualizacji CanvasSize dla Premium
local function updateCanvasSizePremium()
    local children = ScrollingFramePremium:GetChildren()
    local buttonCount = 0
    for _, child in ipairs(children) do
        if child:IsA("TextButton") and child.Visible then
            buttonCount = buttonCount + 1
        end
    end

    local layout = PremiumGridLayout
    if layout and layout.ClassName == "UIGridLayout" then
        local contentHeight = (layout.AbsoluteCellSize.Y + layout.AbsoluteCellPadding.Y) * math.ceil(buttonCount / math.max(1, math.floor(ScrollingFramePremium.AbsoluteSize.X / (layout.AbsoluteCellSize.X + layout.AbsoluteCellPadding.X))))
        ScrollingFramePremium.CanvasSize = UDim2.new(0, 0, 0, contentHeight + layout.AbsoluteCellPadding.Y)
        print("CanvasSizePremium zaktualizowany na: " .. tostring(ScrollingFramePremium.CanvasSize))
    end
end

-- Funkcja do ładowania i uruchamiania skryptów z URL
local function runScriptFromURL(url, buttonName)
    print("runScriptFromURL: Próbuję załadować skrypt: " .. buttonName .. " z URL: " .. url)
    local success, err = pcall(function()
        local scriptContent = game:HttpGet(url)
        if scriptContent and #scriptContent > 0 then
            local func = loadstring(scriptContent)
            if func then
                func()
                sendNotification("Universal Scripts", "Skrypt '" .. buttonName .. "' załadowany!")
            else
                error("loadstring zwrócił nil. Treść skryptu mogła być pusta lub nieprawidłowa.")
            end
        else
            error("Nie udało się pobrać treści skryptu z URL lub treść jest pusta.")
        end
    end)
    if not success then
        sendNotification("Universal Scripts", "Błąd ładowania skryptu '" .. buttonName .. "': " .. tostring(err))
        warn("Błąd ładowania skryptu '" .. buttonName .. "':", err)
    end
end


---
## Podpięcie zdarzeń
---

-- Przyciski zakładek
HomeTabButton.MouseButton1Click:Connect(function()
    print("Kliknięto HomeTabButton.")
    showTab("Home")
end)

PremiumTabButton.MouseButton1Click:Connect(function()
    print("Kliknięto PremiumTabButton.")
    showTab("Premium")
end)

-- Przycisk Hide/Show GUI
HideButton.MouseButton1Click:Connect(function()
    print("Kliknięto HideButton. Zmieniam widoczność MainFrame.")
    MainFrame.Visible = not MainFrame.Visible
end)

-- Zmiany rozmiaru MainFrame powinny aktualizować pozycję HideButton
MainFrame.SizeChanged:Connect(function()
    HideButton.Position = UDim2.new(MainFrame.Position.X.Scale + MainFrame.Size.X.Scale - (HideButton.Size.X.Offset / ScreenGui.AbsoluteSize.X), -HideButton.Size.X.Offset/2, MainFrame.Position.Y.Scale, 0)
end)

-- Aktualizacja CanvasSize po zmianie rozmiaru ScrollingFrame lub dodaniu/usunięciu dzieci
ScrollingFrameHome.ChildAdded:Connect(updateCanvasSizeHome)
ScrollingFrameHome.ChildRemoved:Connect(updateCanvasSizeHome)
ScrollingFrameHome.SizeChanged:Connect(updateCanvasSizeHome)

ScrollingFramePremium.ChildAdded:Connect(updateCanvasSizePremium)
ScrollingFramePremium.ChildRemoved:Connect(updateCanvasSizePremium)
ScrollingFramePremium.SizeChanged:Connect(updateCanvasSizePremium)


-- Przykładowe przyciski skryptów (podłącz te, które chcesz używać)
SpeedToolbutton.MouseButton1Click:Connect(function()
    runScriptFromURL("https://pastebin.com/raw/X7B0HPc2", SpeedToolbutton.Name)
end)

ClicktptoolButton.MouseButton1Click:Connect(function()
    runScriptFromURL("https://pastebin.com/raw/4KF2WJ9u", ClicktptoolButton.Name)
end)

SpectateButton_Home.MouseButton1Click:Connect(function()
    runScriptFromURL("https://pastebin.com/raw/UFVLWQRw", SpectateButton_Home.Name)
end)

SpectateButton_Premium.MouseButton1Click:Connect(function()
    -- Ta funkcja już ma wbudowane sprawdzenie Game Passa w showTab, ale tutaj też możesz to zrobić dla pewności
    runScriptFromURL("https://pastebin.com/raw/UFVLWQRw", SpectateButton_Premium.Name)
end)

MM2Button.MouseButton1Click:Connect(function()
    runScriptFromURL("https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/loadstring", MM2Button.Name)
end)

-- Podłącz inne przyciski Premium tutaj (FlyButton, Invisibiltybutton, GhostMM2Button)
-- FlyButton.MouseButton1Click:Connect(function() runScriptFromURL("...", FlyButton.Name) end)
-- Invisibiltybutton.MouseButton1Click:Connect(function() runScriptFromURL("...", Invisibiltybutton.Name) end)
-- GhostMM2Button.MouseButton1Click:Connect(function() runScriptFromURL("...", GhostMM2Button.Name) end)


---
## Inicjalizacja skryptu
---

-- Początkowe sprawdzenie statusu Game Passa (jednorazowo)
local function initialGamePassCheck()
    local success, result = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)
    if success then
        hasGamePass = result
        if hasGamePass then
            sendNotification("Universal Scripts", "Witaj! Posiadasz wersję premium.")
        else
            sendNotification("Universal Scripts", "Witaj! Nie posiadasz wersji premium. Kliknij zakładkę Premium, aby dowiedzieć się więcej.")
        end
    else
        warn("Initial Game Pass check failed:", result)
        sendNotification("Universal Scripts", "Nie można sprawdzić statusu wersji premium.")
    end
end

-- Poczekaj chwilę, zanim wszystko się załaduje, a następnie uruchom
task.wait(1)
initialGamePassCheck() -- Sprawdzamy Game Passa na start
updateMM2ButtonVisibility() -- Aktualizujemy widoczność przycisków MM2 na start
showTab("Home") -- Wyświetl zakładkę Home jako domyślną
updateCanvasSizeHome() -- Initial canvas size calculation after buttons are parented
updateCanvasSizePremium()
MainFrame.Visible = true -- Upewnij się, że MainFrame jest widoczny na start

print("END: Skrypt zakończył inicjalizację.")
